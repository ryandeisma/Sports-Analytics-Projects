library(tidyverse)
game <- read_csv("game.csv")
str(game)
# Season after bubble
recent <- game %>% filter(game_date > "2020/12/21")
View(recent)
teams <- recent.groupby(['team_name_home', 'team_name_away'])
teams <- recent.groupby('team_name_home', 'team_name_away')
library(tidyverse)
library(pandas)
teams <- recent %>% group_by('team_name_home', 'team_name_away')
View(teams)
View(teams)
teams <- recent %>% group_by(team_name_home, team_name_away)
View(teams)
teams <- recent %>% group_by(team_name_home)
teams <- recent %>% group_by(team_name_home)
View(teams)
teams <- recent %>% group_by(team_name_home)
wolves = recent %>% filter(team_abbreviation_home == 'MIN' | team_abbreviation_away == 'MIN')
View(wolves)
wolves = wolves %>% mutate(outcome = ifelse(wl_home == 'W','W', 'L' ))
View(wolves)
View(wolves)
wolves$outcome = as_factor(wolves$outcome)
summary(wolves)
View(wolves)
wolves = recent %>% filter(team_abbreviation_home == 'MIN' | team_abbreviation_away == 'MIN')
wolves = wolves %>% mutate(outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','W', 'L' ), ifelse(wl_away == 'W','W', 'L' )))
wolves$outcome = as_factor(wolves$outcome)
summary(wolves)
wolves = recent %>% filter(team_abbreviation_home == 'MIN' | team_abbreviation_away == 'MIN')
wolves = wolves %>% mutate(outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','W', 'L' ), ifelse(wl_away == 'W','W', 'L' )))
wolves = wolves %>% mutate(dest_outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','Home Win', 'Home Loss' ), ifelse(wl_away == 'W','Away Win', 'Away Loss' )))
wolves$outcome = as_factor(wolves$outcome)
summary(wolves)
wolves = recent %>% filter(team_abbreviation_home == 'MIN' | team_abbreviation_away == 'MIN')
wolves = wolves %>% mutate(outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','W', 'L' ), ifelse(wl_away == 'W','W', 'L' )))
wolves = wolves %>% mutate(dest_outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','Home Win', 'Home Loss' ), ifelse(wl_away == 'W','Away Win', 'Away Loss' )))
wolves$outcome = as_factor(wolves$outcome)
wolves$dest_outcome = as_factor(wolves$dest_outcome)
summary(wolves)
wolves <- wolves %>%
mutate(game_date = as.Date(game_date))
wolves <- wolves %>%
arrange(game_date)
wolves <- wolves %>%
mutate(game_date = as.Date(game_date))
wolves <- wolves %>%
arrange(game_date)
# Filter for consecutive days
consecutive_games <- wolves %>%
filter(game_date - lag(game_date) == 1)
View(consecutive_games)
rest_games <- wolves %>%
filter(game_date - lag(game_date) > 2)
View(wolves)
wolves = wolves %>% mutate(OeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home) ,(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away)))
wolves = wolves %>% mutate(OTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_home)/(fga_home + 0.44 * ftm_home+ tov_home)) ,((100 * tov_home))/(fga_home + 0.44 * ftm_home + tov_home)))
View(wolves)
# Offensive Rebounding Percentage Formula=(Offensive Rebounds)/[(Offensive Rebounds)+(Opponent’s Defensive Rebounds)]
wolves = wolves %>% mutate(OeFGPct = ifelse(team_abbreviation_home == 'MIN', (oreb_home)/(oreb_home + dreb_away), (oreb_away)/(oreb_away + dreb_home)))
View(wolves)
# OeFGPct = (2pt FGM + 1.5 * 3pt FGM) / FGA
wolves = wolves %>% mutate(OeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home) ,(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away)))
# Offensive Rebounding Percentage Formula=(Offensive Rebounds)/[(Offensive Rebounds)+(Opponent’s Defensive Rebounds)]
wolves = wolves %>% mutate(ORBPct = ifelse(team_abbreviation_home == 'MIN', (oreb_home)/(oreb_home + dreb_away), (oreb_away)/(oreb_away + dreb_home)))
View(wolves)
# OFT = FT/FGA
wolves = wolves %>% mutate(OFT = ifelse(team_abbreviation_home == 'MIN', (fta_home)/(fga_home), (fta_away)/(fga_home)))
# Defensive Rebounding Percentage
wolves = wolves %>% mutate(DRBPct = ifelse(team_abbreviation_home == 'MIN', (dreb_home)/(oreb_away + dreb_home), (dreb_away)/(oreb_home + dreb_away)))
# OTOVPct
wolves = wolves %>% mutate(OTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_home)/(fga_home + 0.44 * ftm_home+ tov_home)) ,((100 * tov_away))/(fga_away + 0.44 * ftm_away + tov_away)))
# DTOVPct
wolves = wolves %>% mutate(DTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_away)/(fga_away + 0.44 * ftm_away+ tov_away)) ,((100 * tov_home))/(fga_home + 0.44 * ftm_home + tov_home)))
# OFT = FT/FGA
wolves = wolves %>% mutate(OFT = ifelse(team_abbreviation_home == 'MIN', (fta_home)/(fga_home), (fta_away)/(fga_away)))
# OFT = FT/FGA
wolves = wolves %>% mutate(DFT = ifelse(team_abbreviation_home == 'MIN', (fta_away)/(fga_away), (fta_home)/(fga_home)))
# DeFGPct = (2pt FGM + 1.5 * 3pt FGM) / FGA
wolves = wolves %>% mutate(DeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away) ,(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home)))
# OeFGPct = (2pt FGM + 1.5 * 3pt FGM) / FGA
wolves = wolves %>% mutate(OeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home) ,(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away)))
# OTOVPct
wolves = wolves %>% mutate(OTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_home)/(fga_home + 0.44 * ftm_home+ tov_home)) ,((100 * tov_away))/(fga_away + 0.44 * ftm_away + tov_away)))
# Offensive Rebounding Percentage Formula=(Offensive Rebounds)/[(Offensive Rebounds)+(Opponent’s Defensive Rebounds)]
wolves = wolves %>% mutate(ORBPct = ifelse(team_abbreviation_home == 'MIN', (oreb_home)/(oreb_home + dreb_away), (oreb_away)/(oreb_away + dreb_home)))
# OFT = FT/FGA
wolves = wolves %>% mutate(OFT = ifelse(team_abbreviation_home == 'MIN', (fta_home)/(fga_home), (fta_away)/(fga_away)))
# DeFGPct = (2pt FGM + 1.5 * 3pt FGM) / FGA
wolves = wolves %>% mutate(DeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away) ,(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home)))
# Defensive Rebounding Percentage
wolves = wolves %>% mutate(DRBPct = ifelse(team_abbreviation_home == 'MIN', (dreb_home)/(oreb_away + dreb_home), (dreb_away)/(oreb_home + dreb_away)))
# DTOVPct
wolves = wolves %>% mutate(DTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_away)/(fga_away + 0.44 * ftm_away+ tov_away)) ,((100 * tov_home))/(fga_home + 0.44 * ftm_home + tov_home)))
# DFT = FT/FGA
wolves = wolves %>% mutate(DFT = ifelse(team_abbreviation_home == 'MIN', (fta_away)/(fga_away), (fta_home)/(fga_home)))
# Offensive Rating (OR) = 100 / (TmPoss + OppPoss) * Pts
# Defensive Rating (DR) = 100 / (TmPoss + OppPoss) * OppPts
four_fact = wolves %>% select(OeFGPct, OTOVPct, OFT,ORBPct, DeFGPct, DTOVPct, DFT,DRBPct)
View(four_fact)
corr <- round(cor(four_fact), 2)
head(corr[, 1:8])
p.mat <- cor_pmat(four_fact)
library(tidyverse)
library(ggcorrplot)
library(gridExtra)
p.mat <- cor_pmat(four_fact)
head(p.mat[, 1:8])
ggcorrplot(corr,  hc.order = TRUE,  lab = TRUE)
View(wolves)
wolves = wolves %>% mutate(plus_minus = ifelse(team_abbreviation_home == 'MIN', plus_minus_home, plus_minus_away))
four_fact = wolves %>% select(outcome, plus_minus, OeFGPct, OTOVPct, OFT,ORBPct, DeFGPct, DTOVPct, DFT,DRBPct)
corr <- round(cor(four_fact_wins), 2)
p.mat <- cor_pmat(four_fact_wins)
corr <- round(cor(four_fact), 2)
corr <- round(cor(four_fact), 2)
wolves = wolves %>% mutate(wl_binary = ifelse(outcome == 'W', 1, 0))
wolves$wl_binary = as_factor(wolves$wl_binary)
corr <- round(cor(four_fact), 2)
four_fact = wolves %>% select(wl_binary, plus_minus, OeFGPct, OTOVPct, OFT,ORBPct, DeFGPct, DTOVPct, DFT,DRBPct)
corr <- round(cor(four_fact), 2)
wolves$wl_binary = as.numeric(wolves$wl_binary)
corr <- round(cor(four_fact), 2)
four_fact = wolves %>% select(wl_binary, plus_minus, OeFGPct, OTOVPct, OFT,ORBPct, DeFGPct, DTOVPct, DFT,DRBPct)
str(four_fact)
p.mat <- cor_pmat(four_fact)
head(p.mat[, 1:10])
p.mat <- cor_pmat(four_fact)
head(p.mat[, 1:10])
p.mat <- cor_pmat(four_fact)
head(p.mat[, 1:8])
p1 <- ggplot(data=wolves, aes(x=W, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=W, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=W, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=W, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=W, y=DeFGPct, color=DeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p6 <- ggplot(data=wolves, aes(x=W, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=W, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=W, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
p1 <- ggplot(data=wolves, aes(x=outcome, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=outcome, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=outcome, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=outcome, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=outcome, y=DeFGPct, color=DeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p6 <- ggplot(data=wolves, aes(x=outcome, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=outcome, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=outcome, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
grid.arrange(p1, p2, p3, p4, ncol = 2)
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(data=wolves, aes(x=outcome, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=outcome, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=outcome, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=outcome, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=outcome, y=DeFGPct, color=DeFGPct))+geom_boxplot(show.legend = FALSE) + theme_bw()
p6 <- ggplot(data=wolves, aes(x=outcome, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=outcome, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=outcome, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(data=wolves, aes(x=outcome, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=outcome, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=outcome, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=outcome, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=outcome, y=DeFGPct, color=DeFGPct))+geom_boxplot(show.legend = FALSE) + theme_bw() + scale_color_manual(values = 'blue') +
scale_fill_manual(values = "green")
p6 <- ggplot(data=wolves, aes(x=outcome, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=outcome, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=outcome, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(data=wolves, aes(x=outcome, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=outcome, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=outcome, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=outcome, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=outcome, y=DeFGPct, color=DeFGPct))+geom_col(show.legend = FALSE)
p6 <- ggplot(data=wolves, aes(x=outcome, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=outcome, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=outcome, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(data=wolves, aes(x=outcome, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=outcome, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=outcome, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=outcome, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=outcome, y=DeFGPct, color=DeFGPct))+geom_line(show.legend = FALSE)
p6 <- ggplot(data=wolves, aes(x=outcome, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=outcome, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=outcome, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(data=wolves, aes(x=outcome, y=OeFGPct, color=OeFGPct))+geom_point(show.legend = FALSE) + theme_bw()
p2 <- ggplot(data=wolves, aes(x=outcome, y=OFT, color=OFT))+geom_point(show.legend = FALSE) + theme_bw()
p3 <- ggplot(data=wolves, aes(x=outcome, y=ORBPct, color=ORBPct))+geom_point(show.legend = FALSE) + theme_bw()
p4 <- ggplot(data=wolves, aes(x=outcome, y=OTOVPct, color=OTOVPct))+geom_point(show.legend = FALSE) + theme_bw()
p5 <- ggplot(data=wolves, aes(x=outcome, y=DeFGPct, color=DeFGPct))+geom_point(show.legend = FALSE)
p6 <- ggplot(data=wolves, aes(x=outcome, y=DFT, color=DFT))+geom_point(show.legend = FALSE) + theme_bw()
p7 <- ggplot(data=wolves, aes(x=outcome, y=DRBPct, color=DRBPct))+geom_point(show.legend = FALSE) + theme_bw()
p8 <- ggplot(data=wolves, aes(x=outcome, y=DTOVPct, color=DTOVPct ))+geom_point(show.legend = FALSE) + theme_bw()
grid.arrange(p1, p2, p3, p4, ncol = 2)
grid.arrange(p5, p6, p7, p8, ncol = 2)
model1 = lm(wl_binary ~ OeFGPct+OTOVPct+ORBPct+OFT+DeFGPct+DTOVPct+DRBPct+DFT,four_fact)
summary(model1)
wolves <- wolves %>%
mutate(game_date = as.Date(game_date))
wolves <- wolves %>%
arrange(game_date)
consecutive_games <- wolves %>%
filter(game_date - lag(game_date) == 1)
rest_games <- wolves %>%
filter(game_date - lag(game_date) > 2)
View(rest_games)
rest_games <- wolves %>%
filter(game_date - lag(game_date) > 2)
consecutive_games <- wolves %>%
filter(game_date - lag(game_date) == 1)
View(consecutive_games)
View(game)
library(esquisse)
esquisser()
wolves %>%
filter(dest_outcome %in% c("Home Win", "Home Loss")) %>%
ggplot() +
aes(x = dest_outcome) +
geom_bar(fill = "#112446") +
theme_minimal()
wolves %>%
filter(dest_outcome %in% c("Home Win", "Home Loss")) %>%
ggplot() +
aes(x = dest_outcome) +
geom_bar(fill = "#112446") +
theme_minimal()
summary(wolves)
summary(consecutive_games)
summary(rest_games)
# Season after bubble
# recent <- game %>% filter(game_date > "2020/12/21")
recent <- game %>% filter(game_date > "2021/10/21")
wolves = recent %>% filter(team_abbreviation_home == 'MIN' | team_abbreviation_away == 'MIN')
wolves = wolves %>% mutate(outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','W', 'L' ), ifelse(wl_away == 'W','W', 'L' )))
wolves = wolves %>% mutate(dest_outcome = ifelse(team_abbreviation_home == 'MIN', ifelse(wl_home == 'W','Home Win', 'Home Loss' ), ifelse(wl_away == 'W','Away Win', 'Away Loss' )))
wolves = wolves %>% mutate(plus_minus = ifelse(team_abbreviation_home == 'MIN', plus_minus_home, plus_minus_away))
wolves = wolves %>% mutate(wl_binary = ifelse(outcome == 'W', 1, 0))
wolves$outcome = as_factor(wolves$outcome)
wolves$dest_outcome = as_factor(wolves$dest_outcome)
wolves$wl_binary = as.numeric(wolves$wl_binary)
summary(wolves)
# OeFGPct = (2pt FGM + 1.5 * 3pt FGM) / FGA
wolves = wolves %>% mutate(OeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home) ,(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away)))
# OTOVPct
wolves = wolves %>% mutate(OTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_home)/(fga_home + 0.44 * ftm_home+ tov_home)) ,((100 * tov_away))/(fga_away + 0.44 * ftm_away + tov_away)))
# Offensive Rebounding Percentage Formula=(Offensive Rebounds)/[(Offensive Rebounds)+(Opponent’s Defensive Rebounds)]
wolves = wolves %>% mutate(ORBPct = ifelse(team_abbreviation_home == 'MIN', (oreb_home)/(oreb_home + dreb_away), (oreb_away)/(oreb_away + dreb_home)))
# OFT = FT/FGA
wolves = wolves %>% mutate(OFT = ifelse(team_abbreviation_home == 'MIN', (fta_home)/(fga_home), (fta_away)/(fga_away)))
# DeFGPct = (2pt FGM + 1.5 * 3pt FGM) / FGA
wolves = wolves %>% mutate(DeFGPct = ifelse(team_abbreviation_home == 'MIN',(((fgm_away-fg3m_away)+(1.5*fg3m_away))/fga_away) ,(((fgm_home-fg3m_home)+(1.5*fg3m_home))/fga_home)))
# Defensive Rebounding Percentage
wolves = wolves %>% mutate(DRBPct = ifelse(team_abbreviation_home == 'MIN', (dreb_home)/(oreb_away + dreb_home), (dreb_away)/(oreb_home + dreb_away)))
# DTOVPct
wolves = wolves %>% mutate(DTOVPct = ifelse(team_abbreviation_home == 'MIN',((100 * tov_away)/(fga_away + 0.44 * ftm_away+ tov_away)) ,((100 * tov_home))/(fga_home + 0.44 * ftm_home + tov_home)))
# DFT = FT/FGA
wolves = wolves %>% mutate(DFT = ifelse(team_abbreviation_home == 'MIN', (fta_away)/(fga_away), (fta_home)/(fga_home)))
wolves <- wolves %>%
mutate(game_date = as.Date(game_date))
wolves <- wolves %>%
arrange(game_date)
consecutive_games <- wolves %>%
filter(game_date - lag(game_date) == 1)
rest_games <- wolves %>%
filter(game_date - lag(game_date) > 2)
summary(consecutive_games)
summary(rest_games)
summary(consecutive_games)
summary(rest_games)
summary(consecutive_games)
esquisser()
home_games <- wolves %>%
filter(team_abbreviation_home == 'MIN')
road_games <- wolves %>%
filter(team_abbreviation_away == 'MIN')
summary(home_games)
summary(away_games)
summary(road_games)
summary(consecutive_games)
summary(rest_games)
summary(home_games)
summary(road_games)
esquisser()
ggplot(home_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p1 <- ggplot(home_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p2 <- ggplot(home_games) +
aes(x = outcome, y = ORBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p3 <- ggplot(home_games) +
aes(x = outcome, y = OTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p4 <- ggplot(home_games) +
aes(x = outcome, y = OFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p5 <- ggplot(home_games) +
aes(x = outcome, y = DeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p6 <- ggplot(home_games) +
aes(x = outcome, y = DRBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p7 <- ggplot(home_games) +
aes(x = outcome, y = DTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p8 <- ggplot(home_games) +
aes(x = outcome, y = DFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
grid.arrange(p1, p2, p3, p4, ncol = 2)
p1 <- ggplot(home_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p2 <- ggplot(home_games) +
aes(x = outcome, y = ORBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p3 <- ggplot(home_games) +
aes(x = outcome, y = OTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p4 <- ggplot(home_games) +
aes(x = outcome, y = OFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p5 <- ggplot(home_games) +
aes(x = outcome, y = DeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p6 <- ggplot(home_games) +
aes(x = outcome, y = DRBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p7 <- ggplot(home_games) +
aes(x = outcome, y = DTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()
p8 <- ggplot(home_games) +
aes(x = outcome, y = DFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(home_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p2 <- ggplot(home_games) +
aes(x = outcome, y = ORBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p3 <- ggplot(home_games) +
aes(x = outcome, y = OTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p4 <- ggplot(home_games) +
aes(x = outcome, y = OFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()+ xlab("")
p5 <- ggplot(home_games) +
aes(x = outcome, y = DeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p6 <- ggplot(home_games) +
aes(x = outcome, y = DRBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p7 <- ggplot(home_games) +
aes(x = outcome, y = DTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p8 <- ggplot(home_games) +
aes(x = outcome, y = DFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
grid.arrange(p1, p2, p3, p4, ncol = 2)
grid.arrange(p5, p6, p7, p8, ncol = 2)
View(road_games)
p1 <- ggplot(road_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p2 <- ggplot(road_games) +
aes(x = outcome, y = ORBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p3 <- ggplot(road_games) +
aes(x = outcome, y = OTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p4 <- ggplot(road_games) +
aes(x = outcome, y = OFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()+ xlab("")
p5 <- ggplot(road_games) +
aes(x = outcome, y = DeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p6 <- ggplot(road_games) +
aes(x = outcome, y = DRBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p7 <- ggplot(road_games) +
aes(x = outcome, y = DTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p8 <- ggplot(road_games) +
aes(x = outcome, y = DFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
grid.arrange(p1, p2, p3, p4, ncol = 2)
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(consecutive_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p2 <- ggplot(consecutive_games) +
aes(x = outcome, y = ORBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p3 <- ggplot(consecutive_games) +
aes(x = outcome, y = OTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p4 <- ggplot(consecutive_games) +
aes(x = outcome, y = OFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()+ xlab("")
p5 <- ggplot(consecutive_games) +
aes(x = outcome, y = DeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p6 <- ggplot(consecutive_games) +
aes(x = outcome, y = DRBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p7 <- ggplot(consecutive_games) +
aes(x = outcome, y = DTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p8 <- ggplot(consecutive_games) +
aes(x = outcome, y = DFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
grid.arrange(p1, p2, p3, p4, ncol = 2)
grid.arrange(p5, p6, p7, p8, ncol = 2)
p1 <- ggplot(rest_games) +
aes(x = outcome, y = OeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p2 <- ggplot(rest_games) +
aes(x = outcome, y = ORBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p3 <- ggplot(rest_games) +
aes(x = outcome, y = OTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p4 <- ggplot(rest_games) +
aes(x = outcome, y = OFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal()+ xlab("")
p5 <- ggplot(rest_games) +
aes(x = outcome, y = DeFGPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p6 <- ggplot(rest_games) +
aes(x = outcome, y = DRBPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p7 <- ggplot(rest_games) +
aes(x = outcome, y = DTOVPct) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
p8 <- ggplot(rest_games) +
aes(x = outcome, y = DFT) +
geom_boxplot(fill = "#2EF818") +
theme_minimal() + xlab("")
grid.arrange(p1, p2, p3, p4, ncol = 2)
grid.arrange(p5, p6, p7, p8, ncol = 2)
mean(consecutive_games$OeFGPct)
summary(consecutive_games)
summary(rest_games)
summary(rest_games)
summary(home_games)
summary(home_games)
summary(road_games)
summary(road_games)
mean(wolves$OeFGPct)
mean(wolves$ORBPct)
View(wolves)
mean(wolves$OTOVPct)
mean(wolves$OFT)
mean(wolves$DeFGPct)
mean(wolves$DeFGPct)
mean(wolves$DRBPct)
mean(wolves$DTOVPct)
mean(wolves$DFT)
